<?xml version='1.0' encoding='utf-8'?>

<tool id="clodius" name="clodius" version="0.0.1">
    <description>Clodius is a tool for breaking up large data sets into smaller tiles that can subsequently be displayed using an appropriate viewer.</description>
     <requirements>
        <requirement type="package" version="0.3.2">pybigwig</requirement>
        <requirement type="package" version="0.2.19">negspy</requirement>
        <requirement type="package" version="1.0.7">slugid</requirement>
        <requirement type="package" version="0.6.5">clodius</requirement>
    </requirements>
    <command>
    <![CDATA[
        #set delimiter_map = {'tab': '\t'}

        clodius aggregate $file_type $input_file --assembly $genome_assembly

        #if $output_filename:
          --output-file $output_filename
        #end if

        #if $file_type == "bedpe":
            --chr1-col $chromosome_one_column
            --from1-col $from_one_column
            --to1-col $to_one_column

            --chr2-col $chromosome_two_column
            --from2-col $from_two_column
            --to2-col $to_two_column
        #end if

        #if $file_type == "bedfile":
          --max-per-tile $max_per_tile
          --importance-column $importance_column
          #if $delimiter:
            --delimiter \$delimiter_map[$delimiter]
          #end if
        #end if

        #if $file_type == "bedgraph":
            #if $chromosome_column:
              --chromosome-col $chromosome_column
            #end if
            
            #if $from_position_column:
              --from-pos-col $from_position_column
            #end if
            
            #if $to_position_column:
              --to-pos-col $to_position_column
            #end if

            #if $value_column:
              --value-col $value_column
            #end if

            #if $has_header:
              --has-header
            #end if

            #if $nan_value:
              --nan-value $nan_value
            #end if
        #end if
    ]]>
    </command>
    <inputs>
        <param 
          name="chromosome_column" 
          type="integer" 
          label="The column number (1-based) which contains the chromosome name."
          optional="true"/>
        <param 
          name="chromosome_one_column" 
          type="integer" 
          label="The column containing the first chromosome."
          optional="true"/>
        <param 
          name="chromosome_two_column" 
          type="integer" 
          label="The column containing the second chromosome."
          optional="true"/>
        <param 
          name="delimiter"
          type="text"
          optional="true"/>
        <param 
          name="file_type" 
          type="text" 
          label="Filetype to be aggregated">
            <option value="bedpe">Bedpe-like file</option>
            <option value="bedfile">Gene Annotation File</option>
            <option value="bedgraph">BedGraph file</option>
            <option value="bigwig">BigWig File</option>
        </param>
        <param 
          name="from_one_column" 
          type="integer" 
          label="The column containing the first start position."
          optional="true"/>
        <param 
          name="from_two_column" 
          type="integer" 
          label="The column containing the second start position."
          optional="true"/>
        <param 
          name="from_position_column" 
          type="integer" 
          label="The column number (1-based) which contains the starting position."
          value="2"/>
        <param 
          name="genome_assembly" 
          type="text"
          label="Genome Assembly"
          value="hg19"/>
          <param 
          name="has_header" 
          type="boolean" 
          label="Does this file have a header that we should ignore?"
          optional="true"/>
        <param 
          name="input_file" 
          type="data" 
          label="File to be aggregated"/>
       <param 
          name="importance_column" 
          type="integer" 
          label="The column (1-based) containing information about how important that row is. 
          If it's absent, then use the length of the region. 
          If the value is equal to `random`, then a random value will be used for the importance (effectively leading to random sampling)"
          optional="true"/>
        <param 
          name="max_per_tile" 
          type="integer" 
          label="Max per tile."
          value="100"/>
         <param 
          name="nan_value" 
          type="text" 
          label="The string to use as a NaN value."
          optional="true"/>
        <param 
          name="output_filename" 
          type="text" 
          label="The default output file name to use. If this isn't specified, clodius will replace the current extension with something resonable."
          optional="true"/>
        <param 
          name="to_one_column" 
          type="integer" 
          label="The column containing the first end position."
          optional="true"/>
        <param 
          name="to_two_column"
          type="integer" 
          label="The column containing the second end position."
          optional="true"/>
        <param 
          name="to_position_column" 
          type="integer" 
          label="The column number (1-based) which contains the ending position."
          value="3"/>
        <param 
          name="value_column" 
          type="integer" 
          label="The column number (1-based) which contains the actual value position."
          value="4"/>
    </inputs>
    <outputs>
        <data name="output_file" />
    </outputs>
    <tests>
       <test expect_num_outputs="1" expect_exit_code="0">
          <param name="input_file" value="Rao_RepA_GM12878_Arrowhead.txt"/>
          <param name="file_type" value="bedpe" />
          <param name="chromosome_one_column" value="1" />
          <param name="chromosome_two_column" value="1" />
          <param name="from_one_column" value="2" />
          <param name="from_two_column" value="2" />
          <param name="to_one_column" value="3" />
          <param name="to_two_column" value="3" />
          <param name="output_filename" value="bedpe_test.out" />
          <output name="output_file" file="Rao_RepA_GM12878_Arrowhead.txt.multires" />     
        </test>
        <test expect_num_outputs="1" expect_exit_code="0">
          <param name="input_file" value="geneAnnotationsExonsUnions.short.bed.txt" />
          <param name="file_type" value="bedfile" />
          <param name="importance_column" value="5" />
          <param name="max_per_tile" value="20" />
          <param name="delimiter" value="tab" />
          <param name="output_filename" value="bedfile_test.out" />
        </test> 
        <test expect_num_outputs="1" expect_exit_code="0">
          <param name="input_file" value="cnvs_hw.tsv" />
          <param name="file_type" value="bedgraph" />
          <param name="genome_assembly" value="grch37" />
          <param name="chromosome_column" value="2" />
          <param name="from_position_column" value="3" />
          <param name="to_position_column" value="4" />
          <param name="value_column" value="5" />
          <param name="has_header" value="true" />
          <param name="nan_value" value="NA" />
          <param name="output_filename" value="bedgraph_test.out" />
        </test>
        <test expect_num_outputs="1" expect_exit_code="0">
          <param name="input_file" value="test.bw" />
          <param name="file_type" value="bigwig" />
          <param name="output_filename" value="bigwig_test.out" />
          <output name="output_file" file="test.multires.bw" lines_diff="9"/>     
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**
Clodius is a tool for breaking up large data sets into smaller tiles that can subsequently be displayed using an appropriate viewer.
]]>
    </help>
</tool>
